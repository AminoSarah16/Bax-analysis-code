1. Import der Imspector-Messungen nach Python (https://pypi.org/project/specpy/)
  - raussuchen der richtigen Kanäle (*), Problem mit specpy Stacknamen (manual neu abspeichern)

- Separierung in ganze Zellen
  - Maske auf ursprüngliche Bilder für jede Zelle (*)
  - Speichern als tif bild in results/cell-masks
  - Code: cell-separation/single_cell_separation_batch.py
  - Output: results/cell-separations/*.tif (ImageJ - glasbey on dark)

- Optional: Crosstalk der Detektionskanäle bestimmen und wenn vorhanden, rausrechnen

2. Mito-Kanal: Maske erstellen (*)
  - Bestimmen der Auflösung (nur einmal)
  - Rauschen entfernen (*)
  - Out-of-Fokus Background entfernen (*)
  - Adaptiver Threshold (manuell einstellen) (*)
  - auch Zellfläche erkennen (niedrigerer Threshold auf unspezifischen Zellhintergrund)
  - Speichern: .tiff und hdf5
  - GUI, um Parameter des Thresholdings besser einstellen zu können
  - Code: gui/start_gui (Mito mode)
  - Output: results/mito-masks/*.mito-mask.tif (mito maske) und *.parameters.json (parameter)

3. Bax-Kanal:
  - Bestimmen der Auflösung
  - Rauschen entfernen (*)
  - Out-of-Fokus Background entfernen (*)
  - Detektion von Clustern (klein, eher rund, hell) (*) Threshold auf Größe
  - Detektion von Ringen (mittelklein, mit einem Loch, nicht viel drumherum, eher dunkel, eher in der Nähe von Mitos)
  - Nebenprodukt sind Linien (nicht-geschlossene Ringe, oder Bögen, Us oder gerade Linien, nicht zuviele Abzweigungen)
  - Detektion von komplexen Netzwerken (linienerkennung)
  - Müssen Verzweigungen (verzweigte Linien ohne Löcher) noch als komplex berücksichtigt werden?? voerst nein, und wer5den momentan als Linien gezählt
  - Sind Cluster isoliert oder Teil einer anderen Struktur (Ring, Netzwerk) Ja und einzeln zählen und nach Größe sortieren. Aber Skeletons werden nicht unterbrochen, falls Cluster vorhanden.
  - Unspezifisch (nichts von dem oben??) Sollte es nicht mehr geben
  - Check: Sind wir uns sicher, dass wir Cluster nicht auch als andere Struktur nochmal erkennen?
  - Speichern:
    - als Bild: Colorcode nach Type (also nur 3 Farben oder so) .tiff .hdf5
    - als Liste von nummerierten Objekten mit Typnummer, Statistik und zugehöriger Liste von Pixeln als .json file


    01_U2OS_DKO_plus_Bax_wt\replicate2\pcDNA\IF36_spl15_U2OS-DKO_pcDNA-Bax-wt_6hEx_14hAct_cytC-AF488_Tom20-AF594_Bax-SR_cl9_superEarly-rings-on-one-side-only.msr

4. Quantifizierung:
    der Cluster, Ringe, Netzwerke, Sonstiges nach Mitonähe
  - Mitonähe (muss vorher Mitomaske laden):
        - Prozentzahl des Überlapps der Fläche der STRUKTUR
        - Distanz vom Mittelpunkt der Struktur zum nächsten Mito (Abstand 0 is wsl hoher Überlapp)
  - Speichern: als liste von werten
  - Code: bax-mito-overlap.py

5. Statistik
  - Laden der Ergebnisse aller Messungen
    - normieren auf Zellgröße?
    - Einzelergebnisse auflisten pro Zelle? Ja, weil das gibt mir den Fehlerbalken
  - Aufaddieren für alle Bedingungen
  - Signifikanztest
  - Ausgabe in Excel oder Textfile

Generelle Probleme:
 - Anzeige (Skalierung der Colortabl)


